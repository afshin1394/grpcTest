// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: moshtary.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace serviceTest.Protos {

  /// <summary>Holder for reflection information generated from moshtary.proto</summary>
  public static partial class MoshtaryReflection {

    #region Descriptor
    /// <summary>File descriptor for moshtary.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MoshtaryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tb3NodGFyeS5wcm90bxIFZ3JlZXQiUAoPTW9zaHRhcnlSZXF1ZXN0EhUK",
            "DWNjRm9yb3NoYW5kZWgYASABKAkSEAoIY2NNYXNpcnMYAiABKAkSFAoMQ29k",
            "ZU1vc2h0YXJ5GAMgASgJIsEFCghNb3NodGFyeRISCgpjY01vc2h0YXJ5GAEg",
            "ASgFEhQKDGNvZGVNb3NodGFyeRgCIAEoCRIPCgdjY0FmcmFkGAMgASgFEhQK",
            "DG5hbWVNb3NodGFyeRgEIAEoCRIVCg1mTmFtZU1vc2h0YXJ5GAUgASgJEhUK",
            "DUxOYW1lTW9zaHRhcnkYBiABKAkSEQoJTmFtZVRhYmxvGAcgASgJEh4KFkNv",
            "ZGVOb2VWb3NvbEF6TW9zaHRhcnkYCCABKAUSEwoLTW9kYXRlVm9zb2wYCSAB",
            "KAUSGAoQQ29kZU5vZVNoYWtoc2lhdBgKIAEoBRIPCgdEYXJhamVoGAsgASgF",
            "EhMKC05hbWVEYXJhamVoGAwgASgJEhMKC0NvZGVWYXplaWF0GA0gASgFEhAK",
            "CENvZGVNZWx5GA4gASgJEhMKC0NvZGVOb2VIYW1sGA8gASgFEhQKDFNoZW5h",
            "c2VoTWVseRgQIAEoCRIXCg9NYXNhaGF0TWFnaGF6ZWgYESABKAUSEAoIaGFz",
            "QW5iYXIYEiABKAUSFQoNY2NOb2VNb3NodGFyeRgTIAEoBRIRCgljY05vZVNl",
            "bmYYFCABKAUSFQoNY2NGb3Jvc2hhbmRlaBgVIAEoBRIPCgdjY01hc2lyGBYg",
            "ASgFEiAKGENvbnRyb2xFdGViYXJGb3Jvc2hhbmRlaBgXIAEoBRITCgtNb2Rh",
            "dGVOYWdoZBgYIAEoBRIdChVUYXJpa2hNb2FyZWZpTW9zaHRhcnkYGSABKAkS",
            "DwoHT2xhdmlhdBgaIAEoBRIPCgdBZGRyZXNzGBsgASgJEg4KBk1vYmlsZRgc",
            "IAEoCRIRCglUb29yVmlzaXQYHSABKAUSGAoQY2NNb3NodGFyeVBhcmVudBge",
            "IAEoBRITCgtEYXRlT2ZNYXNpchgfIAEoCRIVCg1LaGFyZWpBek1haGFsGCAg",
            "ASgFIjMKDE1vc2h0YXJ5TGlzdBIjCgptb3NodGFyaWVzGAEgAygLMg8uZ3Jl",
            "ZXQuTW9zaHRhcnkyWAoPTW9zaHRhcnlTZXJ2aWNlEkUKFEdldE1vc2h0YXJ5",
            "QnljY01hc2lyEhYuZ3JlZXQuTW9zaHRhcnlSZXF1ZXN0GhMuZ3JlZXQuTW9z",
            "aHRhcnlMaXN0IgBCFaoCEnNlcnZpY2VUZXN0LlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::serviceTest.Protos.MoshtaryRequest), global::serviceTest.Protos.MoshtaryRequest.Parser, new[]{ "CcForoshandeh", "CcMasirs", "CodeMoshtary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::serviceTest.Protos.Moshtary), global::serviceTest.Protos.Moshtary.Parser, new[]{ "CcMoshtary", "CodeMoshtary", "CcAfrad", "NameMoshtary", "FNameMoshtary", "LNameMoshtary", "NameTablo", "CodeNoeVosolAzMoshtary", "ModateVosol", "CodeNoeShakhsiat", "Darajeh", "NameDarajeh", "CodeVazeiat", "CodeMely", "CodeNoeHaml", "ShenasehMely", "MasahatMaghazeh", "HasAnbar", "CcNoeMoshtary", "CcNoeSenf", "CcForoshandeh", "CcMasir", "ControlEtebarForoshandeh", "ModateNaghd", "TarikhMoarefiMoshtary", "Olaviat", "Address", "Mobile", "ToorVisit", "CcMoshtaryParent", "DateOfMasir", "KharejAzMahal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::serviceTest.Protos.MoshtaryList), global::serviceTest.Protos.MoshtaryList.Parser, new[]{ "Moshtaries" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MoshtaryRequest : pb::IMessage<MoshtaryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoshtaryRequest> _parser = new pb::MessageParser<MoshtaryRequest>(() => new MoshtaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoshtaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::serviceTest.Protos.MoshtaryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryRequest(MoshtaryRequest other) : this() {
      ccForoshandeh_ = other.ccForoshandeh_;
      ccMasirs_ = other.ccMasirs_;
      codeMoshtary_ = other.codeMoshtary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryRequest Clone() {
      return new MoshtaryRequest(this);
    }

    /// <summary>Field number for the "ccForoshandeh" field.</summary>
    public const int CcForoshandehFieldNumber = 1;
    private string ccForoshandeh_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CcForoshandeh {
      get { return ccForoshandeh_; }
      set {
        ccForoshandeh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ccMasirs" field.</summary>
    public const int CcMasirsFieldNumber = 2;
    private string ccMasirs_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CcMasirs {
      get { return ccMasirs_; }
      set {
        ccMasirs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CodeMoshtary" field.</summary>
    public const int CodeMoshtaryFieldNumber = 3;
    private string codeMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeMoshtary {
      get { return codeMoshtary_; }
      set {
        codeMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoshtaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoshtaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CcForoshandeh != other.CcForoshandeh) return false;
      if (CcMasirs != other.CcMasirs) return false;
      if (CodeMoshtary != other.CodeMoshtary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CcForoshandeh.Length != 0) hash ^= CcForoshandeh.GetHashCode();
      if (CcMasirs.Length != 0) hash ^= CcMasirs.GetHashCode();
      if (CodeMoshtary.Length != 0) hash ^= CodeMoshtary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CcForoshandeh.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CcForoshandeh);
      }
      if (CcMasirs.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CcMasirs);
      }
      if (CodeMoshtary.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeMoshtary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CcForoshandeh.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CcForoshandeh);
      }
      if (CcMasirs.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CcMasirs);
      }
      if (CodeMoshtary.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeMoshtary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CcForoshandeh.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CcForoshandeh);
      }
      if (CcMasirs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CcMasirs);
      }
      if (CodeMoshtary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeMoshtary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoshtaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.CcForoshandeh.Length != 0) {
        CcForoshandeh = other.CcForoshandeh;
      }
      if (other.CcMasirs.Length != 0) {
        CcMasirs = other.CcMasirs;
      }
      if (other.CodeMoshtary.Length != 0) {
        CodeMoshtary = other.CodeMoshtary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CcForoshandeh = input.ReadString();
            break;
          }
          case 18: {
            CcMasirs = input.ReadString();
            break;
          }
          case 26: {
            CodeMoshtary = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CcForoshandeh = input.ReadString();
            break;
          }
          case 18: {
            CcMasirs = input.ReadString();
            break;
          }
          case 26: {
            CodeMoshtary = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Moshtary : pb::IMessage<Moshtary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Moshtary> _parser = new pb::MessageParser<Moshtary>(() => new Moshtary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Moshtary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::serviceTest.Protos.MoshtaryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Moshtary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Moshtary(Moshtary other) : this() {
      ccMoshtary_ = other.ccMoshtary_;
      codeMoshtary_ = other.codeMoshtary_;
      ccAfrad_ = other.ccAfrad_;
      nameMoshtary_ = other.nameMoshtary_;
      fNameMoshtary_ = other.fNameMoshtary_;
      lNameMoshtary_ = other.lNameMoshtary_;
      nameTablo_ = other.nameTablo_;
      codeNoeVosolAzMoshtary_ = other.codeNoeVosolAzMoshtary_;
      modateVosol_ = other.modateVosol_;
      codeNoeShakhsiat_ = other.codeNoeShakhsiat_;
      darajeh_ = other.darajeh_;
      nameDarajeh_ = other.nameDarajeh_;
      codeVazeiat_ = other.codeVazeiat_;
      codeMely_ = other.codeMely_;
      codeNoeHaml_ = other.codeNoeHaml_;
      shenasehMely_ = other.shenasehMely_;
      masahatMaghazeh_ = other.masahatMaghazeh_;
      hasAnbar_ = other.hasAnbar_;
      ccNoeMoshtary_ = other.ccNoeMoshtary_;
      ccNoeSenf_ = other.ccNoeSenf_;
      ccForoshandeh_ = other.ccForoshandeh_;
      ccMasir_ = other.ccMasir_;
      controlEtebarForoshandeh_ = other.controlEtebarForoshandeh_;
      modateNaghd_ = other.modateNaghd_;
      tarikhMoarefiMoshtary_ = other.tarikhMoarefiMoshtary_;
      olaviat_ = other.olaviat_;
      address_ = other.address_;
      mobile_ = other.mobile_;
      toorVisit_ = other.toorVisit_;
      ccMoshtaryParent_ = other.ccMoshtaryParent_;
      dateOfMasir_ = other.dateOfMasir_;
      kharejAzMahal_ = other.kharejAzMahal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Moshtary Clone() {
      return new Moshtary(this);
    }

    /// <summary>Field number for the "ccMoshtary" field.</summary>
    public const int CcMoshtaryFieldNumber = 1;
    private int ccMoshtary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcMoshtary {
      get { return ccMoshtary_; }
      set {
        ccMoshtary_ = value;
      }
    }

    /// <summary>Field number for the "codeMoshtary" field.</summary>
    public const int CodeMoshtaryFieldNumber = 2;
    private string codeMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeMoshtary {
      get { return codeMoshtary_; }
      set {
        codeMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ccAfrad" field.</summary>
    public const int CcAfradFieldNumber = 3;
    private int ccAfrad_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcAfrad {
      get { return ccAfrad_; }
      set {
        ccAfrad_ = value;
      }
    }

    /// <summary>Field number for the "nameMoshtary" field.</summary>
    public const int NameMoshtaryFieldNumber = 4;
    private string nameMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameMoshtary {
      get { return nameMoshtary_; }
      set {
        nameMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fNameMoshtary" field.</summary>
    public const int FNameMoshtaryFieldNumber = 5;
    private string fNameMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FNameMoshtary {
      get { return fNameMoshtary_; }
      set {
        fNameMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LNameMoshtary" field.</summary>
    public const int LNameMoshtaryFieldNumber = 6;
    private string lNameMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LNameMoshtary {
      get { return lNameMoshtary_; }
      set {
        lNameMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NameTablo" field.</summary>
    public const int NameTabloFieldNumber = 7;
    private string nameTablo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameTablo {
      get { return nameTablo_; }
      set {
        nameTablo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CodeNoeVosolAzMoshtary" field.</summary>
    public const int CodeNoeVosolAzMoshtaryFieldNumber = 8;
    private int codeNoeVosolAzMoshtary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CodeNoeVosolAzMoshtary {
      get { return codeNoeVosolAzMoshtary_; }
      set {
        codeNoeVosolAzMoshtary_ = value;
      }
    }

    /// <summary>Field number for the "ModateVosol" field.</summary>
    public const int ModateVosolFieldNumber = 9;
    private int modateVosol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModateVosol {
      get { return modateVosol_; }
      set {
        modateVosol_ = value;
      }
    }

    /// <summary>Field number for the "CodeNoeShakhsiat" field.</summary>
    public const int CodeNoeShakhsiatFieldNumber = 10;
    private int codeNoeShakhsiat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CodeNoeShakhsiat {
      get { return codeNoeShakhsiat_; }
      set {
        codeNoeShakhsiat_ = value;
      }
    }

    /// <summary>Field number for the "Darajeh" field.</summary>
    public const int DarajehFieldNumber = 11;
    private int darajeh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Darajeh {
      get { return darajeh_; }
      set {
        darajeh_ = value;
      }
    }

    /// <summary>Field number for the "NameDarajeh" field.</summary>
    public const int NameDarajehFieldNumber = 12;
    private string nameDarajeh_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameDarajeh {
      get { return nameDarajeh_; }
      set {
        nameDarajeh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CodeVazeiat" field.</summary>
    public const int CodeVazeiatFieldNumber = 13;
    private int codeVazeiat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CodeVazeiat {
      get { return codeVazeiat_; }
      set {
        codeVazeiat_ = value;
      }
    }

    /// <summary>Field number for the "CodeMely" field.</summary>
    public const int CodeMelyFieldNumber = 14;
    private string codeMely_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeMely {
      get { return codeMely_; }
      set {
        codeMely_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CodeNoeHaml" field.</summary>
    public const int CodeNoeHamlFieldNumber = 15;
    private int codeNoeHaml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CodeNoeHaml {
      get { return codeNoeHaml_; }
      set {
        codeNoeHaml_ = value;
      }
    }

    /// <summary>Field number for the "ShenasehMely" field.</summary>
    public const int ShenasehMelyFieldNumber = 16;
    private string shenasehMely_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShenasehMely {
      get { return shenasehMely_; }
      set {
        shenasehMely_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MasahatMaghazeh" field.</summary>
    public const int MasahatMaghazehFieldNumber = 17;
    private int masahatMaghazeh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasahatMaghazeh {
      get { return masahatMaghazeh_; }
      set {
        masahatMaghazeh_ = value;
      }
    }

    /// <summary>Field number for the "hasAnbar" field.</summary>
    public const int HasAnbarFieldNumber = 18;
    private int hasAnbar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HasAnbar {
      get { return hasAnbar_; }
      set {
        hasAnbar_ = value;
      }
    }

    /// <summary>Field number for the "ccNoeMoshtary" field.</summary>
    public const int CcNoeMoshtaryFieldNumber = 19;
    private int ccNoeMoshtary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcNoeMoshtary {
      get { return ccNoeMoshtary_; }
      set {
        ccNoeMoshtary_ = value;
      }
    }

    /// <summary>Field number for the "ccNoeSenf" field.</summary>
    public const int CcNoeSenfFieldNumber = 20;
    private int ccNoeSenf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcNoeSenf {
      get { return ccNoeSenf_; }
      set {
        ccNoeSenf_ = value;
      }
    }

    /// <summary>Field number for the "ccForoshandeh" field.</summary>
    public const int CcForoshandehFieldNumber = 21;
    private int ccForoshandeh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcForoshandeh {
      get { return ccForoshandeh_; }
      set {
        ccForoshandeh_ = value;
      }
    }

    /// <summary>Field number for the "ccMasir" field.</summary>
    public const int CcMasirFieldNumber = 22;
    private int ccMasir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcMasir {
      get { return ccMasir_; }
      set {
        ccMasir_ = value;
      }
    }

    /// <summary>Field number for the "ControlEtebarForoshandeh" field.</summary>
    public const int ControlEtebarForoshandehFieldNumber = 23;
    private int controlEtebarForoshandeh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ControlEtebarForoshandeh {
      get { return controlEtebarForoshandeh_; }
      set {
        controlEtebarForoshandeh_ = value;
      }
    }

    /// <summary>Field number for the "ModateNaghd" field.</summary>
    public const int ModateNaghdFieldNumber = 24;
    private int modateNaghd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModateNaghd {
      get { return modateNaghd_; }
      set {
        modateNaghd_ = value;
      }
    }

    /// <summary>Field number for the "TarikhMoarefiMoshtary" field.</summary>
    public const int TarikhMoarefiMoshtaryFieldNumber = 25;
    private string tarikhMoarefiMoshtary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TarikhMoarefiMoshtary {
      get { return tarikhMoarefiMoshtary_; }
      set {
        tarikhMoarefiMoshtary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Olaviat" field.</summary>
    public const int OlaviatFieldNumber = 26;
    private int olaviat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Olaviat {
      get { return olaviat_; }
      set {
        olaviat_ = value;
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 27;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 28;
    private string mobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ToorVisit" field.</summary>
    public const int ToorVisitFieldNumber = 29;
    private int toorVisit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ToorVisit {
      get { return toorVisit_; }
      set {
        toorVisit_ = value;
      }
    }

    /// <summary>Field number for the "ccMoshtaryParent" field.</summary>
    public const int CcMoshtaryParentFieldNumber = 30;
    private int ccMoshtaryParent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CcMoshtaryParent {
      get { return ccMoshtaryParent_; }
      set {
        ccMoshtaryParent_ = value;
      }
    }

    /// <summary>Field number for the "DateOfMasir" field.</summary>
    public const int DateOfMasirFieldNumber = 31;
    private string dateOfMasir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateOfMasir {
      get { return dateOfMasir_; }
      set {
        dateOfMasir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KharejAzMahal" field.</summary>
    public const int KharejAzMahalFieldNumber = 32;
    private int kharejAzMahal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KharejAzMahal {
      get { return kharejAzMahal_; }
      set {
        kharejAzMahal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Moshtary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Moshtary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CcMoshtary != other.CcMoshtary) return false;
      if (CodeMoshtary != other.CodeMoshtary) return false;
      if (CcAfrad != other.CcAfrad) return false;
      if (NameMoshtary != other.NameMoshtary) return false;
      if (FNameMoshtary != other.FNameMoshtary) return false;
      if (LNameMoshtary != other.LNameMoshtary) return false;
      if (NameTablo != other.NameTablo) return false;
      if (CodeNoeVosolAzMoshtary != other.CodeNoeVosolAzMoshtary) return false;
      if (ModateVosol != other.ModateVosol) return false;
      if (CodeNoeShakhsiat != other.CodeNoeShakhsiat) return false;
      if (Darajeh != other.Darajeh) return false;
      if (NameDarajeh != other.NameDarajeh) return false;
      if (CodeVazeiat != other.CodeVazeiat) return false;
      if (CodeMely != other.CodeMely) return false;
      if (CodeNoeHaml != other.CodeNoeHaml) return false;
      if (ShenasehMely != other.ShenasehMely) return false;
      if (MasahatMaghazeh != other.MasahatMaghazeh) return false;
      if (HasAnbar != other.HasAnbar) return false;
      if (CcNoeMoshtary != other.CcNoeMoshtary) return false;
      if (CcNoeSenf != other.CcNoeSenf) return false;
      if (CcForoshandeh != other.CcForoshandeh) return false;
      if (CcMasir != other.CcMasir) return false;
      if (ControlEtebarForoshandeh != other.ControlEtebarForoshandeh) return false;
      if (ModateNaghd != other.ModateNaghd) return false;
      if (TarikhMoarefiMoshtary != other.TarikhMoarefiMoshtary) return false;
      if (Olaviat != other.Olaviat) return false;
      if (Address != other.Address) return false;
      if (Mobile != other.Mobile) return false;
      if (ToorVisit != other.ToorVisit) return false;
      if (CcMoshtaryParent != other.CcMoshtaryParent) return false;
      if (DateOfMasir != other.DateOfMasir) return false;
      if (KharejAzMahal != other.KharejAzMahal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CcMoshtary != 0) hash ^= CcMoshtary.GetHashCode();
      if (CodeMoshtary.Length != 0) hash ^= CodeMoshtary.GetHashCode();
      if (CcAfrad != 0) hash ^= CcAfrad.GetHashCode();
      if (NameMoshtary.Length != 0) hash ^= NameMoshtary.GetHashCode();
      if (FNameMoshtary.Length != 0) hash ^= FNameMoshtary.GetHashCode();
      if (LNameMoshtary.Length != 0) hash ^= LNameMoshtary.GetHashCode();
      if (NameTablo.Length != 0) hash ^= NameTablo.GetHashCode();
      if (CodeNoeVosolAzMoshtary != 0) hash ^= CodeNoeVosolAzMoshtary.GetHashCode();
      if (ModateVosol != 0) hash ^= ModateVosol.GetHashCode();
      if (CodeNoeShakhsiat != 0) hash ^= CodeNoeShakhsiat.GetHashCode();
      if (Darajeh != 0) hash ^= Darajeh.GetHashCode();
      if (NameDarajeh.Length != 0) hash ^= NameDarajeh.GetHashCode();
      if (CodeVazeiat != 0) hash ^= CodeVazeiat.GetHashCode();
      if (CodeMely.Length != 0) hash ^= CodeMely.GetHashCode();
      if (CodeNoeHaml != 0) hash ^= CodeNoeHaml.GetHashCode();
      if (ShenasehMely.Length != 0) hash ^= ShenasehMely.GetHashCode();
      if (MasahatMaghazeh != 0) hash ^= MasahatMaghazeh.GetHashCode();
      if (HasAnbar != 0) hash ^= HasAnbar.GetHashCode();
      if (CcNoeMoshtary != 0) hash ^= CcNoeMoshtary.GetHashCode();
      if (CcNoeSenf != 0) hash ^= CcNoeSenf.GetHashCode();
      if (CcForoshandeh != 0) hash ^= CcForoshandeh.GetHashCode();
      if (CcMasir != 0) hash ^= CcMasir.GetHashCode();
      if (ControlEtebarForoshandeh != 0) hash ^= ControlEtebarForoshandeh.GetHashCode();
      if (ModateNaghd != 0) hash ^= ModateNaghd.GetHashCode();
      if (TarikhMoarefiMoshtary.Length != 0) hash ^= TarikhMoarefiMoshtary.GetHashCode();
      if (Olaviat != 0) hash ^= Olaviat.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (ToorVisit != 0) hash ^= ToorVisit.GetHashCode();
      if (CcMoshtaryParent != 0) hash ^= CcMoshtaryParent.GetHashCode();
      if (DateOfMasir.Length != 0) hash ^= DateOfMasir.GetHashCode();
      if (KharejAzMahal != 0) hash ^= KharejAzMahal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CcMoshtary != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CcMoshtary);
      }
      if (CodeMoshtary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CodeMoshtary);
      }
      if (CcAfrad != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CcAfrad);
      }
      if (NameMoshtary.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameMoshtary);
      }
      if (FNameMoshtary.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FNameMoshtary);
      }
      if (LNameMoshtary.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LNameMoshtary);
      }
      if (NameTablo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameTablo);
      }
      if (CodeNoeVosolAzMoshtary != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CodeNoeVosolAzMoshtary);
      }
      if (ModateVosol != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ModateVosol);
      }
      if (CodeNoeShakhsiat != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CodeNoeShakhsiat);
      }
      if (Darajeh != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Darajeh);
      }
      if (NameDarajeh.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NameDarajeh);
      }
      if (CodeVazeiat != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(CodeVazeiat);
      }
      if (CodeMely.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CodeMely);
      }
      if (CodeNoeHaml != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CodeNoeHaml);
      }
      if (ShenasehMely.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ShenasehMely);
      }
      if (MasahatMaghazeh != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MasahatMaghazeh);
      }
      if (HasAnbar != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(HasAnbar);
      }
      if (CcNoeMoshtary != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CcNoeMoshtary);
      }
      if (CcNoeSenf != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CcNoeSenf);
      }
      if (CcForoshandeh != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(CcForoshandeh);
      }
      if (CcMasir != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(CcMasir);
      }
      if (ControlEtebarForoshandeh != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ControlEtebarForoshandeh);
      }
      if (ModateNaghd != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(ModateNaghd);
      }
      if (TarikhMoarefiMoshtary.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(TarikhMoarefiMoshtary);
      }
      if (Olaviat != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(Olaviat);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(Address);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Mobile);
      }
      if (ToorVisit != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(ToorVisit);
      }
      if (CcMoshtaryParent != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CcMoshtaryParent);
      }
      if (DateOfMasir.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(DateOfMasir);
      }
      if (KharejAzMahal != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(KharejAzMahal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CcMoshtary != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CcMoshtary);
      }
      if (CodeMoshtary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CodeMoshtary);
      }
      if (CcAfrad != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CcAfrad);
      }
      if (NameMoshtary.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameMoshtary);
      }
      if (FNameMoshtary.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FNameMoshtary);
      }
      if (LNameMoshtary.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LNameMoshtary);
      }
      if (NameTablo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameTablo);
      }
      if (CodeNoeVosolAzMoshtary != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CodeNoeVosolAzMoshtary);
      }
      if (ModateVosol != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ModateVosol);
      }
      if (CodeNoeShakhsiat != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CodeNoeShakhsiat);
      }
      if (Darajeh != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Darajeh);
      }
      if (NameDarajeh.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NameDarajeh);
      }
      if (CodeVazeiat != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(CodeVazeiat);
      }
      if (CodeMely.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CodeMely);
      }
      if (CodeNoeHaml != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CodeNoeHaml);
      }
      if (ShenasehMely.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ShenasehMely);
      }
      if (MasahatMaghazeh != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MasahatMaghazeh);
      }
      if (HasAnbar != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(HasAnbar);
      }
      if (CcNoeMoshtary != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CcNoeMoshtary);
      }
      if (CcNoeSenf != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CcNoeSenf);
      }
      if (CcForoshandeh != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(CcForoshandeh);
      }
      if (CcMasir != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(CcMasir);
      }
      if (ControlEtebarForoshandeh != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ControlEtebarForoshandeh);
      }
      if (ModateNaghd != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(ModateNaghd);
      }
      if (TarikhMoarefiMoshtary.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(TarikhMoarefiMoshtary);
      }
      if (Olaviat != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(Olaviat);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(Address);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Mobile);
      }
      if (ToorVisit != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(ToorVisit);
      }
      if (CcMoshtaryParent != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CcMoshtaryParent);
      }
      if (DateOfMasir.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(DateOfMasir);
      }
      if (KharejAzMahal != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(KharejAzMahal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CcMoshtary != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CcMoshtary);
      }
      if (CodeMoshtary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeMoshtary);
      }
      if (CcAfrad != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CcAfrad);
      }
      if (NameMoshtary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameMoshtary);
      }
      if (FNameMoshtary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FNameMoshtary);
      }
      if (LNameMoshtary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LNameMoshtary);
      }
      if (NameTablo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTablo);
      }
      if (CodeNoeVosolAzMoshtary != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeNoeVosolAzMoshtary);
      }
      if (ModateVosol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModateVosol);
      }
      if (CodeNoeShakhsiat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeNoeShakhsiat);
      }
      if (Darajeh != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Darajeh);
      }
      if (NameDarajeh.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameDarajeh);
      }
      if (CodeVazeiat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeVazeiat);
      }
      if (CodeMely.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeMely);
      }
      if (CodeNoeHaml != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeNoeHaml);
      }
      if (ShenasehMely.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShenasehMely);
      }
      if (MasahatMaghazeh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MasahatMaghazeh);
      }
      if (HasAnbar != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HasAnbar);
      }
      if (CcNoeMoshtary != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CcNoeMoshtary);
      }
      if (CcNoeSenf != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CcNoeSenf);
      }
      if (CcForoshandeh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CcForoshandeh);
      }
      if (CcMasir != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CcMasir);
      }
      if (ControlEtebarForoshandeh != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ControlEtebarForoshandeh);
      }
      if (ModateNaghd != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ModateNaghd);
      }
      if (TarikhMoarefiMoshtary.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TarikhMoarefiMoshtary);
      }
      if (Olaviat != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Olaviat);
      }
      if (Address.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Mobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (ToorVisit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ToorVisit);
      }
      if (CcMoshtaryParent != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CcMoshtaryParent);
      }
      if (DateOfMasir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DateOfMasir);
      }
      if (KharejAzMahal != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(KharejAzMahal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Moshtary other) {
      if (other == null) {
        return;
      }
      if (other.CcMoshtary != 0) {
        CcMoshtary = other.CcMoshtary;
      }
      if (other.CodeMoshtary.Length != 0) {
        CodeMoshtary = other.CodeMoshtary;
      }
      if (other.CcAfrad != 0) {
        CcAfrad = other.CcAfrad;
      }
      if (other.NameMoshtary.Length != 0) {
        NameMoshtary = other.NameMoshtary;
      }
      if (other.FNameMoshtary.Length != 0) {
        FNameMoshtary = other.FNameMoshtary;
      }
      if (other.LNameMoshtary.Length != 0) {
        LNameMoshtary = other.LNameMoshtary;
      }
      if (other.NameTablo.Length != 0) {
        NameTablo = other.NameTablo;
      }
      if (other.CodeNoeVosolAzMoshtary != 0) {
        CodeNoeVosolAzMoshtary = other.CodeNoeVosolAzMoshtary;
      }
      if (other.ModateVosol != 0) {
        ModateVosol = other.ModateVosol;
      }
      if (other.CodeNoeShakhsiat != 0) {
        CodeNoeShakhsiat = other.CodeNoeShakhsiat;
      }
      if (other.Darajeh != 0) {
        Darajeh = other.Darajeh;
      }
      if (other.NameDarajeh.Length != 0) {
        NameDarajeh = other.NameDarajeh;
      }
      if (other.CodeVazeiat != 0) {
        CodeVazeiat = other.CodeVazeiat;
      }
      if (other.CodeMely.Length != 0) {
        CodeMely = other.CodeMely;
      }
      if (other.CodeNoeHaml != 0) {
        CodeNoeHaml = other.CodeNoeHaml;
      }
      if (other.ShenasehMely.Length != 0) {
        ShenasehMely = other.ShenasehMely;
      }
      if (other.MasahatMaghazeh != 0) {
        MasahatMaghazeh = other.MasahatMaghazeh;
      }
      if (other.HasAnbar != 0) {
        HasAnbar = other.HasAnbar;
      }
      if (other.CcNoeMoshtary != 0) {
        CcNoeMoshtary = other.CcNoeMoshtary;
      }
      if (other.CcNoeSenf != 0) {
        CcNoeSenf = other.CcNoeSenf;
      }
      if (other.CcForoshandeh != 0) {
        CcForoshandeh = other.CcForoshandeh;
      }
      if (other.CcMasir != 0) {
        CcMasir = other.CcMasir;
      }
      if (other.ControlEtebarForoshandeh != 0) {
        ControlEtebarForoshandeh = other.ControlEtebarForoshandeh;
      }
      if (other.ModateNaghd != 0) {
        ModateNaghd = other.ModateNaghd;
      }
      if (other.TarikhMoarefiMoshtary.Length != 0) {
        TarikhMoarefiMoshtary = other.TarikhMoarefiMoshtary;
      }
      if (other.Olaviat != 0) {
        Olaviat = other.Olaviat;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.ToorVisit != 0) {
        ToorVisit = other.ToorVisit;
      }
      if (other.CcMoshtaryParent != 0) {
        CcMoshtaryParent = other.CcMoshtaryParent;
      }
      if (other.DateOfMasir.Length != 0) {
        DateOfMasir = other.DateOfMasir;
      }
      if (other.KharejAzMahal != 0) {
        KharejAzMahal = other.KharejAzMahal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CcMoshtary = input.ReadInt32();
            break;
          }
          case 18: {
            CodeMoshtary = input.ReadString();
            break;
          }
          case 24: {
            CcAfrad = input.ReadInt32();
            break;
          }
          case 34: {
            NameMoshtary = input.ReadString();
            break;
          }
          case 42: {
            FNameMoshtary = input.ReadString();
            break;
          }
          case 50: {
            LNameMoshtary = input.ReadString();
            break;
          }
          case 58: {
            NameTablo = input.ReadString();
            break;
          }
          case 64: {
            CodeNoeVosolAzMoshtary = input.ReadInt32();
            break;
          }
          case 72: {
            ModateVosol = input.ReadInt32();
            break;
          }
          case 80: {
            CodeNoeShakhsiat = input.ReadInt32();
            break;
          }
          case 88: {
            Darajeh = input.ReadInt32();
            break;
          }
          case 98: {
            NameDarajeh = input.ReadString();
            break;
          }
          case 104: {
            CodeVazeiat = input.ReadInt32();
            break;
          }
          case 114: {
            CodeMely = input.ReadString();
            break;
          }
          case 120: {
            CodeNoeHaml = input.ReadInt32();
            break;
          }
          case 130: {
            ShenasehMely = input.ReadString();
            break;
          }
          case 136: {
            MasahatMaghazeh = input.ReadInt32();
            break;
          }
          case 144: {
            HasAnbar = input.ReadInt32();
            break;
          }
          case 152: {
            CcNoeMoshtary = input.ReadInt32();
            break;
          }
          case 160: {
            CcNoeSenf = input.ReadInt32();
            break;
          }
          case 168: {
            CcForoshandeh = input.ReadInt32();
            break;
          }
          case 176: {
            CcMasir = input.ReadInt32();
            break;
          }
          case 184: {
            ControlEtebarForoshandeh = input.ReadInt32();
            break;
          }
          case 192: {
            ModateNaghd = input.ReadInt32();
            break;
          }
          case 202: {
            TarikhMoarefiMoshtary = input.ReadString();
            break;
          }
          case 208: {
            Olaviat = input.ReadInt32();
            break;
          }
          case 218: {
            Address = input.ReadString();
            break;
          }
          case 226: {
            Mobile = input.ReadString();
            break;
          }
          case 232: {
            ToorVisit = input.ReadInt32();
            break;
          }
          case 240: {
            CcMoshtaryParent = input.ReadInt32();
            break;
          }
          case 250: {
            DateOfMasir = input.ReadString();
            break;
          }
          case 256: {
            KharejAzMahal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CcMoshtary = input.ReadInt32();
            break;
          }
          case 18: {
            CodeMoshtary = input.ReadString();
            break;
          }
          case 24: {
            CcAfrad = input.ReadInt32();
            break;
          }
          case 34: {
            NameMoshtary = input.ReadString();
            break;
          }
          case 42: {
            FNameMoshtary = input.ReadString();
            break;
          }
          case 50: {
            LNameMoshtary = input.ReadString();
            break;
          }
          case 58: {
            NameTablo = input.ReadString();
            break;
          }
          case 64: {
            CodeNoeVosolAzMoshtary = input.ReadInt32();
            break;
          }
          case 72: {
            ModateVosol = input.ReadInt32();
            break;
          }
          case 80: {
            CodeNoeShakhsiat = input.ReadInt32();
            break;
          }
          case 88: {
            Darajeh = input.ReadInt32();
            break;
          }
          case 98: {
            NameDarajeh = input.ReadString();
            break;
          }
          case 104: {
            CodeVazeiat = input.ReadInt32();
            break;
          }
          case 114: {
            CodeMely = input.ReadString();
            break;
          }
          case 120: {
            CodeNoeHaml = input.ReadInt32();
            break;
          }
          case 130: {
            ShenasehMely = input.ReadString();
            break;
          }
          case 136: {
            MasahatMaghazeh = input.ReadInt32();
            break;
          }
          case 144: {
            HasAnbar = input.ReadInt32();
            break;
          }
          case 152: {
            CcNoeMoshtary = input.ReadInt32();
            break;
          }
          case 160: {
            CcNoeSenf = input.ReadInt32();
            break;
          }
          case 168: {
            CcForoshandeh = input.ReadInt32();
            break;
          }
          case 176: {
            CcMasir = input.ReadInt32();
            break;
          }
          case 184: {
            ControlEtebarForoshandeh = input.ReadInt32();
            break;
          }
          case 192: {
            ModateNaghd = input.ReadInt32();
            break;
          }
          case 202: {
            TarikhMoarefiMoshtary = input.ReadString();
            break;
          }
          case 208: {
            Olaviat = input.ReadInt32();
            break;
          }
          case 218: {
            Address = input.ReadString();
            break;
          }
          case 226: {
            Mobile = input.ReadString();
            break;
          }
          case 232: {
            ToorVisit = input.ReadInt32();
            break;
          }
          case 240: {
            CcMoshtaryParent = input.ReadInt32();
            break;
          }
          case 250: {
            DateOfMasir = input.ReadString();
            break;
          }
          case 256: {
            KharejAzMahal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MoshtaryList : pb::IMessage<MoshtaryList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoshtaryList> _parser = new pb::MessageParser<MoshtaryList>(() => new MoshtaryList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoshtaryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::serviceTest.Protos.MoshtaryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryList(MoshtaryList other) : this() {
      moshtaries_ = other.moshtaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoshtaryList Clone() {
      return new MoshtaryList(this);
    }

    /// <summary>Field number for the "moshtaries" field.</summary>
    public const int MoshtariesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::serviceTest.Protos.Moshtary> _repeated_moshtaries_codec
        = pb::FieldCodec.ForMessage(10, global::serviceTest.Protos.Moshtary.Parser);
    private readonly pbc::RepeatedField<global::serviceTest.Protos.Moshtary> moshtaries_ = new pbc::RepeatedField<global::serviceTest.Protos.Moshtary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::serviceTest.Protos.Moshtary> Moshtaries {
      get { return moshtaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoshtaryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoshtaryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!moshtaries_.Equals(other.moshtaries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= moshtaries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      moshtaries_.WriteTo(output, _repeated_moshtaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      moshtaries_.WriteTo(ref output, _repeated_moshtaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += moshtaries_.CalculateSize(_repeated_moshtaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoshtaryList other) {
      if (other == null) {
        return;
      }
      moshtaries_.Add(other.moshtaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            moshtaries_.AddEntriesFrom(input, _repeated_moshtaries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            moshtaries_.AddEntriesFrom(ref input, _repeated_moshtaries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
